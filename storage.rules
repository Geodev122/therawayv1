rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && request.auth.token.role == 'ADMIN';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Default rule - deny all
    match /{allPaths=**} {
      allow read, write: if false;
    }
    
    // Profile pictures
    match /profile_pictures/{userId}/{fileName} {
      // Anyone can read profile pictures
      allow read: if true;
      // Only the user themselves or an admin can upload their profile picture
      allow write: if isOwner(userId) || isAdmin();
    }
    
    // Intro videos
    match /intro_videos/{userId}/{fileName} {
      // Anyone can read intro videos
      allow read: if true;
      // Only the user themselves or an admin can upload their intro video
      allow write: if isOwner(userId) || isAdmin();
    }
    
    // Certifications
    match /certifications/{userId}/{fileName} {
      // Anyone can read certifications
      allow read: if true;
      // Only the user themselves or an admin can upload certifications
      allow write: if isOwner(userId) || isAdmin();
    }
    
    // Clinic photos
    match /clinic_photos/{clinicId}/{fileName} {
      // Anyone can read clinic photos
      allow read: if true;
      // Only the clinic owner or an admin can upload clinic photos
      // This requires a Firestore read to check ownership
      allow write: if isAdmin() || 
        (isAuthenticated() && 
         exists(/databases/$(database)/documents/clinics_data/$(clinicId)) && 
         get(/databases/$(database)/documents/clinics_data/$(clinicId)).data.ownerId == request.auth.uid);
    }
    
    // Space photos
    match /space_photos/{spaceId}/{fileName} {
      // Anyone can read space photos
      allow read: if true;
      // Only the clinic owner or an admin can upload space photos
      // This requires a Firestore read to check ownership
      allow write: if isAdmin() || 
        (isAuthenticated() && 
         exists(/databases/$(database)/documents/clinic_spaces/$(spaceId)) && 
         exists(/databases/$(database)/documents/clinics_data/$(get(/databases/$(database)/documents/clinic_spaces/$(spaceId)).data.clinicId)) && 
         get(/databases/$(database)/documents/clinics_data/$(get(/databases/$(database)/documents/clinic_spaces/$(spaceId)).data.clinicId)).data.ownerId == request.auth.uid);
    }
    
    // Payment receipts
    match /payment_receipts/{userId}/{fileName} {
      // Only the user themselves or an admin can read payment receipts
      allow read: if isOwner(userId) || isAdmin();
      // Only the user themselves or an admin can upload payment receipts
      allow write: if isOwner(userId) || isAdmin();
    }
  }
}